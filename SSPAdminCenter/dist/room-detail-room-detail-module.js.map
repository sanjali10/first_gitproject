{"version":3,"sources":["webpack:///./src/app/app.interceptor.ts","webpack:///./src/app/layout/room-detail/device-detail/device-detail.component.html","webpack:///./src/app/layout/room-detail/device-detail/device-detail.component.scss","webpack:///./src/app/layout/room-detail/device-detail/device-detail.component.ts","webpack:///./src/app/layout/room-detail/room-detail-routing.module.ts","webpack:///./src/app/layout/room-detail/room-detail.component.html","webpack:///./src/app/layout/room-detail/room-detail.component.scss","webpack:///./src/app/layout/room-detail/room-detail.component.ts","webpack:///./src/app/layout/room-detail/room-detail.module.ts"],"names":[],"mappings":"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","file":"room-detail-room-detail-module.js","sourcesContent":["\r\nimport { tap } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport {\r\n    HttpInterceptor, HttpRequest, HttpHandler,\r\n    HttpEvent, HttpSentEvent, HttpHeaderResponse, HttpProgressEvent,\r\n    HttpResponse, HttpUserEvent, HttpErrorResponse\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { TokenStorage } from './core/token.storage';\r\n\r\n\r\nconst TOKEN_HEADER_KEY = 'Authorization';\r\n\r\n@Injectable()\r\nexport class Interceptor implements HttpInterceptor {\r\n\r\n    constructor(private token: TokenStorage, private router: Router) { }\r\n\r\n    intercept(req: HttpRequest<any>,\r\n        next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n        let authReq = req;\r\n        if (this.token.getToken() != null) {\r\n            authReq = req.clone({ headers: req.headers.set(TOKEN_HEADER_KEY, 'teleOffice ' + this.token.getToken()) });\r\n        }\r\n        return next.handle(authReq).pipe(tap(\r\n            (err: any) => {\r\n                if (err instanceof HttpErrorResponse) {\r\n                    if (err.status === 401) {\r\n                        this.router.navigate(['/']);\r\n                    }\r\n                }\r\n            }\r\n        ));\r\n    }\r\n\r\n}\r\n","module.exports = \"<mat-card-title>\\r\\n        {{\\\"Edit\\\" | translate}} {{\\\"Device\\\" | translate}}\\r\\n    </mat-card-title>\\r\\n\\r\\n<mat-card class=\\\"custom_mat_edit\\\">\\r\\n    <mat-card-content>\\r\\n        <form id='deviceForm' fxLayout=\\\"column\\\" [formGroup]=\\\"deviceForm\\\">\\r\\n            <div fxLayoutGap=\\\"20px\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n                <label fxFlex=\\\"20%\\\" fxLayoutAlign=\\\"end center\\\">{{\\\"Model\\\" | translate}}: </label>\\r\\n                <mat-form-field>\\r\\n                    <input matInput id='DeviceName' name='#DeviceName' #DeviceName formControlName=\\\"DeviceName\\\"\\r\\n                        maxlength=\\\"32\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div fxLayoutGap=\\\"20px\\\">\\r\\n                <label fxFlex=\\\"20%\\\" fxLayoutAlign=\\\"end center\\\">{{\\\"Serial No\\\" | translate}}: </label>\\r\\n                <mat-form-field>\\r\\n                    <input matInput id='SerialNo' #SerialNo formControlName=\\\"SerialNo\\\" maxlength=\\\"32\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"deviceType=='Soc IWB'\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                <label fxFlex=\\\"20%\\\" fxLayoutAlign=\\\"end center\\\">{{\\\"Connection Type\\\" | translate}}: </label>\\r\\n                <mat-radio-group fxFlex=\\\"70%\\\" fxLayoutAlign=\\\"start end\\\" formControlName=\\\"ConnectionType\\\" (change)=\\\"handleChange($event)\\\">\\r\\n                    <mat-radio-button fxFlex=\\\"20%\\\" *ngFor=\\\"let conType of conTypes\\\" [value]=\\\"conType\\\"> {{conType |\\r\\n                        translate}}\\r\\n                    </mat-radio-button>\\r\\n                </mat-radio-group>\\r\\n            </div>\\r\\n            <div fxLayoutGap=\\\"20px\\\">\\r\\n                <label fxFlex=\\\"20%\\\" fxLayoutAlign=\\\"end center\\\">{{\\\"IP Address\\\" | translate}}: </label>\\r\\n                <mat-form-field>\\r\\n                    <input matInput id='NetworkAddress' formControlName=\\\"NetworkAddress\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"deviceType=='Soc IWB'\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                <label fxFlex=\\\"20%\\\" fxLayoutAlign=\\\"end center\\\">{{\\\"Port\\\" | translate}}: </label>\\r\\n                <mat-form-field>\\r\\n                    <input matInput id='Port' type=\\\"number\\\" formControlName=\\\"Port\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"deviceType=='Soc IWB'\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                <label fxFlex=\\\"20%\\\" fxLayoutAlign=\\\"end center\\\">{{\\\"Account ID\\\" | translate}}: </label>\\r\\n                <mat-form-field>\\r\\n                    <input matInput id='AccountId' formControlName='AccountId'>\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"deviceType=='Soc IWB'\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                <label fxFlex=\\\"20%\\\" fxLayoutAlign=\\\"end center\\\">{{\\\"Password\\\" | translate}}: </label>\\r\\n                <mat-form-field>\\r\\n                    <input matInput id='Password' type='password' formControlName='Password'>\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"deviceType=='Soc IWB'\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                <label fxFlex=\\\"20%\\\" fxLayoutAlign=\\\"end center\\\">{{\\\"COM Serial Port\\\" | translate}}: </label>\\r\\n                <mat-form-field>\\r\\n                    <input matInput id='ComSerialPort' formControlName='ComSerialPort'>\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"deviceType=='Soc IWB'\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                <label fxFlex=\\\"20%\\\" fxLayoutAlign=\\\"end center\\\">{{\\\"COM Serial Speed\\\" | translate}}: </label>\\r\\n                <mat-form-field>\\r\\n                    <input matInput id='ComSerialSpeed' formControlName='ComSerialSpeed'>\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"deviceType=='WePresent'\\\" fxLayoutGap=\\\"20px\\\">\\r\\n                <label fxFlex=\\\"20%\\\" fxLayoutAlign=\\\"end center\\\">{{\\\"PIN\\\" | translate}}: </label>\\r\\n                <mat-form-field>\\r\\n                    <input matInput id='Pin' type=\\\"number\\\" formControlName=\\\"Pin\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n        </form>\\r\\n    </mat-card-content>\\r\\n    <mat-card-actions>\\r\\n        <div fxFlex=\\\"50%\\\" fxLayoutAlign=\\\"end center\\\" fxLayoutGap=\\\"4%\\\">\\r\\n            <button class=\\\"primart_Btn\\\" mat-raised-button [type]=\\\"submit\\\" (click)=\\\"Save()\\\" [disabled]='deviceForm.invalid'>{{\\\"Ok\\\"\\r\\n                | translate}}</button>\\r\\n            <button class=\\\"secondary_Btn\\\" mat-raised-button routerLink='/roomdetail/{{room}}'>{{\\\"Cancel\\\" | translate}}</button>\\r\\n        </div>\\r\\n    </mat-card-actions>\\r\\n</mat-card>\\r\\n\"","module.exports = \"/* Text Box */\\n:host ::ng-deep .custom_mat_edit mat-form-field.mat-focused div.mat-form-field-underline span.mat-form-field-ripple {\\n  background-color: #12a7bb !important; }\\n:host ::ng-deep .custom_mat_edit mat-form-field.mat-form-field-invalid div.mat-form-field-underline span.mat-form-field-ripple {\\n  background-color: #e47e13 !important; }\\n:host ::ng-deep .custom_mat_edit mat-form-field div.mat-form-field-underline {\\n  background-color: rgba(0, 0, 0, 0.5) !important; }\\n/* Radio Button */\\n:host ::ng-deep .custom_mat_edit mat-radio-group mat-radio-button.mat-radio-checked label.mat-radio-label .mat-radio-container div.mat-radio-outer-circle {\\n  border-color: #12a7bb !important; }\\n/*\\r\\n:host ::ng-deep .custom_mat_edit mat-radio-group mat-radio-button.mat-radio-checked label.mat-radio-label .mat-radio-container div.mat-radio-ripple {\\r\\n    background-color: red !important;\\r\\n}*/\\n:host ::ng-deep .custom_mat_edit mat-radio-group mat-radio-button.mat-radio-checked label.mat-radio-label .mat-radio-container div.mat-radio-inner-circle {\\n  background-color: #12a7bb !important; }\\n.primart_Btn {\\n  background-color: #12a7bb;\\n  color: #ffffff;\\n  font-size: 15px;\\n  border-radius: 22px;\\n  outline: none; }\\n.primart_Btn:hover {\\n  background-color: #1094a6;\\n  color: #ffffff;\\n  outline: none; }\\n.secondary_Btn {\\n  background-color: #dcdfe1;\\n  color: #000000;\\n  font-size: 15px;\\n  border-radius: 22px;\\n  outline: none; }\\n.secondary_Btn:hover {\\n  background-color: #12a7bb;\\n  color: #ffffff;\\n  outline: none; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { FormControl, FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { RoomListService } from '../../room-list/services/room-list.service';\r\nimport { Room } from '../../room-list/interfaces/room';\r\nimport { Device } from '../../room-list/interfaces/room';\r\n@Component({\r\n    selector: 'app-device-detail',\r\n    templateUrl: './device-detail.component.html',\r\n    styleUrls: ['./device-detail.component.scss'],\r\n})\r\nexport class DeviceDetailComponent implements OnInit {\r\n    public deviceType: string;\r\n    room: string;\r\n    conTypes: string[] = ['LAN', 'RS232C'];\r\n\r\n    constructor(\r\n        private router: Router,\r\n        private route: ActivatedRoute,\r\n        private deviceFormBuilder: FormBuilder,\r\n        private roomListService: RoomListService,\r\n    ) {\r\n        this.route.queryParams.subscribe(params => {\r\n            this.deviceType = params['deviceType'];\r\n        });\r\n    }\r\n    deviceForm: FormGroup;\r\n\r\n    ngOnInit() {\r\n        this.deviceForm = new FormGroup({\r\n            DeviceName: new FormControl('', [Validators.required, Validators.maxLength(32)]),\r\n            SerialNo: new FormControl('', [Validators.maxLength(32)]),\r\n            NetworkAddress: new FormControl('', [\r\n                Validators.required,\r\n                Validators.pattern(\r\n                    '(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)',\r\n                ),\r\n            ]),\r\n            ConnectionType: new FormControl({ value: '', disabled: true }),\r\n            Port: new FormControl({ value: '', disabled: true }, [\r\n                Validators.required,\r\n                Validators.min(1000),\r\n                Validators.max(9999),\r\n            ]),\r\n            AccountId: new FormControl({ value: '', disabled: true }),\r\n            Password: new FormControl({ value: '', disabled: true }),\r\n            ComSerialPort: new FormControl({ value: '', disabled: true }, Validators.required),\r\n            ComSerialSpeed: new FormControl({ value: '', disabled: true }, Validators.required),\r\n            Pin: new FormControl({ value: '', disabled: true }, [\r\n                Validators.required,\r\n                Validators.min(1000),\r\n                Validators.max(9999),\r\n            ]),\r\n        });\r\n        this.getRoom();\r\n    }\r\n\r\n    getRoom(): void {\r\n        this.route.parent.params.subscribe(result => {\r\n            this.room = result.id;\r\n            const roomData: Room = this.roomListService.currentRoom;\r\n            if (roomData.id === result.id) {\r\n                for (const device of roomData.Devices) {\r\n                    if (device.Device === this.deviceType) {\r\n                        if (this.deviceType === 'Soc IWB') {\r\n                            this.deviceForm\r\n                                .get('ConnectionType')\r\n                                .enable();\r\n                            const evt = { value: device.ConnectionType };\r\n                            this.handleChange(evt);\r\n                        } else if (this.deviceType === 'WePresent') {\r\n                            this.deviceForm.get('Pin').enable();\r\n                        }\r\n                        this.deviceForm.patchValue(device);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    Save() {\r\n        if (this.deviceForm.valid) {\r\n            const roomData: Room = this.roomListService.currentRoom;\r\n            for (let device of roomData.Devices) {\r\n                if (device.Device === this.deviceType) {\r\n                    for (const key in this.deviceForm.value) {\r\n                        if (this.deviceForm.value.hasOwnProperty(key) && this.deviceForm.value[key] !== '') {\r\n                            device[key] = this.deviceForm.value[key].toString();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.roomListService.UpdateRoom(roomData).subscribe(data => {\r\n                const route = '/roomdetail/' + this.room;\r\n                this.router.navigate([route]);\r\n            });\r\n        }\r\n    }\r\n\r\n    submit() {\r\n        if (this.deviceForm.valid) {\r\n        }\r\n        // emppty stuff\r\n    }\r\n\r\n    handleChange(evt) {\r\n        if (evt.value === 'LAN') {\r\n            this.deviceForm.get('Port').enable();\r\n            this.deviceForm.get('NetworkAddress').enable();\r\n            this.deviceForm.get('AccountId').enable();\r\n            this.deviceForm.get('Password').enable();\r\n            this.deviceForm.get('ComSerialPort').disable();\r\n            this.deviceForm.get('ComSerialSpeed').disable();\r\n        } else {\r\n            this.deviceForm.get('ComSerialPort').enable();\r\n            this.deviceForm.get('ComSerialSpeed').enable();\r\n            this.deviceForm.get('Port').disable();\r\n            this.deviceForm.get('NetworkAddress').disable();\r\n            this.deviceForm.get('AccountId').disable();\r\n            this.deviceForm.get('Password').disable();\r\n        }\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { RoomDetailComponent } from './room-detail.component';\r\nimport { DeviceDetailComponent } from './device-detail/device-detail.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: RoomDetailComponent,\r\n    },\r\n    {\r\n        path: 'device',\r\n        children: [\r\n            {\r\n                path: '',\r\n                component: DeviceDetailComponent,\r\n            },\r\n            {\r\n                path: ':id',\r\n                component: DeviceDetailComponent,\r\n            },\r\n        ],\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule],\r\n})\r\nexport class RoomDetailRoutingModule {}\r\n","module.exports = \"<mat-card layout-fill fxLayout=\\\"column\\\" fxLayoutGap=\\\"40px\\\" class=\\\"custom_mat_detail\\\">\\r\\n    <mat-card>\\r\\n        <mat-card-content>\\r\\n            <div fxLayout=\\\"row\\\">\\r\\n                <form id='roomForm' fxFlex=\\\"85%\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start start \\\" [formGroup]=\\\"roomForm\\\">\\r\\n                    <div mat-line><span class=\\\"label_bold\\\">{{\\\"RoomName\\\" | translate}}:</span> {{room.RoomName}}</div>\\r\\n                    <div>\\r\\n                        <label class=\\\"label_bold\\\">{{\\\"Place\\\" | translate}}:</label>\\r\\n                        <mat-form-field>\\r\\n                            <input matInput id='Place' name='#Place' #Place formControlName=\\\"Place\\\">\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div mat-line><span class=\\\"label_bold\\\">{{\\\"Account\\\" | translate}}:</span> {{room.Account}}</div>\\r\\n                    <mat-slide-toggle labelPosition=before  formControlName=\\\"Activated\\\" color='primary'><span class=\\\"label_bold\\\">{{\\\"Status\\\"\\r\\n    |\\r\\n    translate}}</span></mat-slide-toggle>\\r\\n                </form>\\r\\n                <div fxFlex=\\\"30%\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n                    <button class=\\\"primart_Btn\\\" mat-raised-button [type]=\\\"submit\\\" (click)=\\\"Save()\\\" [disabled]='roomForm.invalid || roomForm.pristine'>{{\\\"Edit\\\"\\r\\n                        |\\r\\n                        translate}}</button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </mat-card-content>\\r\\n        <mat-divider></mat-divider>\\r\\n        <mat-list role=\\\"list\\\" style='padding:0%'>\\r\\n            <mat-list-item class='mat-list-item-fixed' style='height:120px ; width:100%' role=\\\"listitem\\\" *ngFor=\\\"let device of room.Devices; let lastItem = last;\\\">\\r\\n\\r\\n                <mat-icon matListIcon><img src=\\\"../../../assets/images/{{device.Device}}.png\\\" alt=\\\"Desc 1 \\\"></mat-icon>\\r\\n                <h3 class=\\\"device_title\\\" mat-line>{{device.Device}}</h3>\\r\\n                <h4 [fxShow]=\\\"device.DeviceName\\\" mat-line class=\\\"device_label\\\"><span class=\\\"device_label_title\\\">{{\\\"Model\\\" | translate}}:</span> {{device.DeviceName}}</h4>\\r\\n                <h4 [fxShow]=\\\"device.DeviceName\\\" mat-line class=\\\"device_label\\\"><span class=\\\"device_label_title\\\">{{\\\"Serial No\\\" | translate}}:</span> {{device.SerialNo}}</h4>\\r\\n                <h4 [fxShow]=\\\"device.DeviceName\\\" mat-line class=\\\"device_label\\\"><span class=\\\"device_label_title\\\">{{\\\"IP Address\\\" | translate}}:</span> {{device.NetworkAddress}}</h4>\\r\\n                <div fxflex=\\\"noshrink\\\" fxFlex=\\\"30%\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign=\\\"end center\\\">\\r\\n                    <div *ngIf=\\\"device.DeviceName\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\">\\r\\n                        <button class=\\\"primart_Btn\\\" mat-raised-button routerLink='../{{room.id}}/device/{{device.DeviceId}}' [queryParams]=\\\"{deviceType: device.Device}\\\">{{\\\"Edit\\\"\\r\\n                            | translate}}</button>\\r\\n                        <button class=\\\"secondary_Btn\\\" mat-raised-button>{{\\\"Delete\\\" | translate}}</button>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"device.DeviceName\\\">\\r\\n                        <button class='primart_Btn mat-raised-button-large' mat-raised-button>{{\\\"ChangeRoom\\\" | translate}}</button>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"!device.DeviceName\\\">\\r\\n                        <button class='primart_Btn mat-raised-button-large' mat-raised-button routerLink='../{{room.id}}/device'\\r\\n                            [queryParams]=\\\"{deviceType: device.Device}\\\">{{\\\"RegisterDevice\\\"\\r\\n                            | translate}}</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <mat-divider *ngIf=\\\"!lastItem\\\"></mat-divider>\\r\\n            </mat-list-item>\\r\\n        </mat-list>\\r\\n    </mat-card>\\r\\n    <div mat-line fxLayoutAlign=\\\"end end\\\">\\r\\n        <button class=\\\"primart_Btn\\\" mat-raised-button routerLink='/roomlist'>{{\\\"Ok\\\"|translate}}</button>\\r\\n    </div>\\r\\n</mat-card>\\r\\n\"","module.exports = \".mat-raised-button-large {\\n  width: 190px; }\\n\\n.mat-list-item-fixed {\\n  height: 120px; }\\n\\n.label_bold {\\n  font-weight: bold; }\\n\\n/* Text Box */\\n\\n:host ::ng-deep .custom_mat_detail mat-form-field.mat-focused div.mat-form-field-underline span.mat-form-field-ripple {\\n  background-color: #12a7bb !important; }\\n\\n:host ::ng-deep .custom_mat_detail mat-form-field.mat-form-field-invalid div.mat-form-field-underline span.mat-form-field-ripple {\\n  background-color: #e47e13 !important; }\\n\\n:host ::ng-deep .custom_mat_detail mat-form-field div.mat-form-field-underline {\\n  background-color: rgba(0, 0, 0, 0.5) !important; }\\n\\n/* Toggle Bar */\\n\\n:host ::ng-deep .custom_mat_detail mat-slide-toggle.mat-checked div.mat-slide-toggle-bar {\\n  background-color: rgba(18, 167, 187, 0.5) !important;\\n  outline: none; }\\n\\n:host ::ng-deep .custom_mat_detail mat-slide-toggle.mat-checked div.mat-slide-toggle-bar div.mat-slide-toggle-thumb {\\n  background-color: #12a7bb !important;\\n  outline: none; }\\n\\nbutton[ng-reflect-disabled='true'] {\\n  background-color: #dcdfe1 !important;\\n  color: #000000 !important;\\n  opacity: 0.5 !important;\\n  font-size: 15px !important;\\n  border-radius: 22px !important;\\n  outline: none; }\\n\\nbutton[ng-reflect-disabled='false'] {\\n  background-color: #12a7bb !important;\\n  color: #ffffff !important;\\n  font-size: 15px !important;\\n  border-radius: 22px !important;\\n  outline: none; }\\n\\nbutton[ng-reflect-disabled='false']:hover {\\n  background-color: #1094a6 !important;\\n  color: #ffffff !important;\\n  font-size: 15px !important;\\n  border-radius: 22px !important;\\n  outline: none; }\\n\\n.device_title {\\n  font-size: 18px !important;\\n  font-weight: 500 !important;\\n  padding: 0 0 6px 0 !important; }\\n\\n.device_label {\\n  padding: 0 0 4px 0 !important; }\\n\\n.device_label_title {\\n  font-size: 15px !important;\\n  font-weight: 500 !important; }\\n\\n.primart_Btn {\\n  background-color: #12a7bb;\\n  color: #ffffff;\\n  font-size: 15px;\\n  border-radius: 22px;\\n  outline: none; }\\n\\n.primart_Btn:hover {\\n  background-color: #1094a6;\\n  color: #ffffff;\\n  outline: none; }\\n\\n.secondary_Btn {\\n  background-color: #dcdfe1;\\n  color: #000000;\\n  font-size: 15px;\\n  border-radius: 22px;\\n  outline: none; }\\n\\n.secondary_Btn:hover {\\n  background-color: #12a7bb;\\n  color: #ffffff;\\n  outline: none; }\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { FormControl, FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Room } from '../room-list/interfaces/room';\r\nimport { RoomListService } from '../room-list/services/room-list.service';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n@Component({\r\n    selector: 'app-room-detail',\r\n    templateUrl: './room-detail.component.html',\r\n    styleUrls: ['./room-detail.component.scss'],\r\n})\r\nexport class RoomDetailComponent implements OnInit {\r\n    @Input()\r\n    room: Room;\r\n    editMode = false;\r\n    roomForm: FormGroup;\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private roomListService: RoomListService,\r\n        public snackBar: MatSnackBar,\r\n        private translate: TranslateService,\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.roomForm = new FormGroup({\r\n            Place: new FormControl('', [Validators.required, Validators.maxLength(32)]),\r\n            Activated: new FormControl(''),\r\n        });\r\n\r\n        this.roomListService.getRoom(this.route.snapshot.params.id).subscribe((data: Room) => {\r\n            this.roomForm.patchValue({ Place: data.Place, Activated: data.Activated });\r\n            this.room = data;\r\n            this.roomListService.currentRoom = data;\r\n        });\r\n    }\r\n\r\n    submit() {}\r\n\r\n    Save() {\r\n        if (this.roomForm.valid) {\r\n            const updateData = this.roomForm.value;\r\n            updateData.RoomName = this.room.RoomName;\r\n            updateData.Activated = this.roomForm.controls.Activated.value;\r\n            updateData.id = this.room.id;\r\n            this.roomListService.UpdateRoom(this.roomForm.value).subscribe(\r\n                data => {},\r\n                err => {\r\n                    this.roomForm.controls.Activated.setValue(false);\r\n                    this.snackBar.open(\r\n                        this.translate.instant('License not available'),\r\n                        this.translate.instant('Ok'),\r\n                        {\r\n                            duration: 3000,\r\n                        },\r\n                    );\r\n                },\r\n            );\r\n        }\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { RoomDetailRoutingModule } from './room-detail-routing.module';\r\nimport { RoomDetailComponent } from './room-detail.component';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { AppMaterialModule } from '../../material/material.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { Interceptor } from '../../app.interceptor';\r\nimport { DeviceDetailComponent } from './device-detail/device-detail.component';\r\nimport { RoomListService } from '../room-list/services/room-list.service';\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        RoomDetailRoutingModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        AppMaterialModule,\r\n        TranslateModule,\r\n        FlexLayoutModule,\r\n    ],\r\n    providers: [\r\n        {\r\n            provide: HTTP_INTERCEPTORS,\r\n            useClass: Interceptor,\r\n            multi: true\r\n        },\r\n        RoomListService],\r\n    declarations: [RoomDetailComponent, DeviceDetailComponent],\r\n})\r\nexport class RoomDetailModule {}\r\n"],"sourceRoot":""}