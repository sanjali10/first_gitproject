{"version":3,"sources":["webpack:///./src/app/layout/ssp-room/dialogs/add/add.dialog.component.ts","webpack:///./src/app/layout/ssp-room/dialogs/add/add.dialog.css","webpack:///./src/app/layout/ssp-room/dialogs/add/add.dialog.html","webpack:///./src/app/layout/ssp-room/dialogs/edit/edit.dialog.component.ts","webpack:///./src/app/layout/ssp-room/dialogs/edit/edit.dialog.css","webpack:///./src/app/layout/ssp-room/dialogs/edit/edit.dialog.html","webpack:///./src/app/layout/ssp-room/services/o365Auth.service.ts","webpack:///./src/app/layout/ssp-room/services/ssp-room.service.ts","webpack:///./src/app/layout/ssp-room/ssp-room-routing.module.ts","webpack:///./src/app/layout/ssp-room/ssp-room.component.html","webpack:///./src/app/layout/ssp-room/ssp-room.component.scss","webpack:///./src/app/layout/ssp-room/ssp-room.component.ts","webpack:///./src/app/layout/ssp-room/ssp-room.module.ts"],"names":[],"mappings":"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","file":"ssp-room-ssp-room-module.js","sourcesContent":["import { debounceTime } from 'rxjs/operators';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { SspRoomService } from '../../services/ssp-room.service';\r\nimport { O365AuthService } from '../../services/o365Auth.service';\r\nimport { FormControl, FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { SspRoom } from '../../interfaces/ssp-room';\r\nimport { TokenStorage } from '../../../../core/token.storage';\r\n@Component({\r\n    selector: 'app-add.dialog',\r\n    templateUrl: './add.dialog.html',\r\n    styleUrls: ['./add.dialog.css'],\r\n})\r\nexport class AddDialogComponent implements OnInit {\r\n    constructor(\r\n        public dialogRef: MatDialogRef<AddDialogComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: SspRoom,\r\n        public o365AuthService: O365AuthService,\r\n        public dataService: SspRoomService,\r\n        private addRoomFB: FormBuilder,\r\n        private token: TokenStorage,\r\n    ) {}\r\n    addGroupForm: FormGroup;\r\n    roomSearchResult = [];\r\n\r\n    ngOnInit() {\r\n        this.addGroupForm = this.addRoomFB.group({\r\n            RoomName: new FormControl('', [Validators.required, Validators.email]),\r\n            DisplayModel: ['-'],\r\n            PcId: ['-'],\r\n            BotId: ['-'],\r\n            StationId: ['-'],\r\n            TenantId: [this.token.getTenantName()],\r\n            TenantValue: [this.token.getTenantValue()],\r\n        });\r\n\r\n        this.addGroupForm\r\n            .get('RoomName')\r\n            .valueChanges.pipe(debounceTime(400))\r\n            .subscribe(data => {\r\n                this.o365AuthService.getO365Rooms(data, response => {\r\n                    this.roomSearchResult = response;\r\n                });\r\n            });\r\n    }\r\n\r\n    submit() {\r\n        // emppty stuff\r\n    }\r\n\r\n    onNoClick(): void {\r\n        this.dialogRef.close();\r\n    }\r\n\r\n    public confirmAdd(): void {\r\n        if (this.addGroupForm.valid) {\r\n            this.dataService.createSspRoom(this.addGroupForm.value).subscribe(data => {\r\n                console.log('d');\r\n            });\r\n        }\r\n    }\r\n}\r\n","module.exports = \"    .container {\\r\\n        display: flex;\\r\\n        flex-direction: column;\\r\\n        min-width: 450px;\\r\\n    }\\r\\n\\r\\n    .container>* {\\r\\n        width: 100%;\\r\\n    }\\r\\n\\r\\n    .form {\\r\\n        display: flex;\\r\\n        padding-top: 6px;\\r\\n    }\\r\\n\\r\\n    .mat-form-field {\\r\\n        font-size: 16px;\\r\\n        flex-grow: 1;\\r\\n    }\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\r\\n    <h1 mat-dialog-title>{{'AddRoom' | translate }}</h1>\\r\\n    <div mat-dialog-content>\\r\\n        <form id='addRoomForm' name='addRoomForm' #addRoomForm [formGroup]=\\\"addGroupForm\\\">\\r\\n            <mat-form-field class=\\\"align-center\\\">\\r\\n                <input id='RoomName' name='RoomName' #RoomName matInput type=\\\"email\\\" placeholder=\\\"{{'RoomName' | translate }}\\\" formControlName=\\\"RoomName\\\"\\r\\n                    [matAutocomplete]=\\\"auto\\\">\\r\\n                <mat-autocomplete #auto=\\\"matAutocomplete\\\">\\r\\n                    <mat-option *ngFor=\\\"let room of roomSearchResult\\\" [value]=\\\"room\\\" (onSelectionChange)=\\\"RoomName.value = room\\\">\\r\\n                        {{ room }}\\r\\n                    </mat-option>\\r\\n                </mat-autocomplete>\\r\\n                <mat-error *ngIf=\\\"addGroupForm.get('RoomName').hasError('required')\\\">{{'EnterValue' | translate }}</mat-error>\\r\\n                <mat-error *ngIf=\\\"addGroupForm.get('RoomName').hasError('email')\\\">{{'InvalidEmail' | translate }}</mat-error>\\r\\n            </mat-form-field>\\r\\n        </form>\\r\\n    </div>\\r\\n    <div mat-dialog-actions>\\r\\n        <button mat-button [type]=\\\"submit\\\" [mat-dialog-close]=\\\"1\\\" [disabled]='addGroupForm.invalid' (click)=\\\"confirmAdd()\\\">{{'Save' | translate }}</button>\\r\\n        <button mat-button (click)=\\\"onNoClick()\\\" tabindex=\\\"-1\\\">{{'Cancel' | translate }}</button>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { SspRoomService } from '../../services/ssp-room.service';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\n\r\nimport { SspRoom } from '../../interfaces/ssp-room';\r\n\r\n@Component({\r\n    selector: 'app-baza.dialog',\r\n    templateUrl: '../../dialogs/edit/edit.dialog.html',\r\n    styleUrls: ['../../dialogs/edit/edit.dialog.css']\r\n})\r\nexport class EditDialogComponent implements OnInit{\r\n    form: FormGroup;\r\n    constructor(\r\n        public dialogRef: MatDialogRef<EditDialogComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: SspRoom,\r\n        public dataService: SspRoomService,\r\n        private fb: FormBuilder\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.form = this.fb.group({\r\n            RoomName: this.data.RoomName,\r\n            DisplayModel: this.data.DisplayModel,\r\n            PcId: this.data.PcId,\r\n            BotId: this.data.BotId,\r\n            StationId: this.data.StationId\r\n        });\r\n    }\r\n\r\n    submit() {\r\n        // emppty stuff\r\n    }\r\n\r\n    onNoClick(): void {\r\n        this.dialogRef.close();\r\n    }\r\n\r\n    stopEdit(): void {\r\n        this.dataService.UpdateSspRoom(this.data).subscribe(data => {\r\n            console.log(JSON.stringify(data));\r\n        });\r\n    }\r\n}\r\n","module.exports = \".container {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  min-width: 450px;\\r\\n}\\r\\n\\r\\n.container > * {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.form {\\r\\n  display: flex;\\r\\n  padding-top: 6px;\\r\\n}\\r\\n\\r\\n.mat-form-field {\\r\\n  font-size: 16px;\\r\\n  flex-grow: 1;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\r\\n    <h1 mat-dialog-title>Update</h1>\\r\\n    <div mat-dialog-content>\\r\\n        <form [formGroup]=\\\"form\\\">\\r\\n            <mat-form-field class=\\\"align-center\\\">\\r\\n                <input matInput type=\\\"text\\\" placeholder=\\\"{{'RoomName' | translate }}\\\" [(ngModel)]=\\\"data.RoomName\\\" formControlName=\\\"RoomName\\\"\\r\\n                    required>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field class=\\\"full-width-input\\\">\\r\\n                <input matInput type=\\\"text\\\" placeholder=\\\"{{'DisplayModel' | translate }}\\\" [(ngModel)]=\\\"data.DisplayModel\\\" formControlName=\\\"DisplayModel\\\"\\r\\n                    required>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field class=\\\"full-width-input\\\">\\r\\n                <input matInput type=\\\"text\\\" placeholder=\\\"{{'PcId' | translate }}\\\" [(ngModel)]=\\\"data.PcId\\\" formControlName=\\\"PcId\\\" required>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field class=\\\"full-width-input\\\">\\r\\n                <input matInput type=\\\"text\\\" placeholder=\\\"{{'BotId' | translate }}\\\" [(ngModel)]=\\\"data.BotId\\\" formControlName=\\\"BotId\\\" required>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field class=\\\"full-width-input\\\">\\r\\n                <input matInput type=\\\"text\\\" placeholder=\\\"{{'StationId' | translate }}\\\" [(ngModel)]=\\\"data.StationId\\\" formControlName=\\\"StationId\\\" required>\\r\\n            </mat-form-field>\\r\\n        </form>\\r\\n    </div>\\r\\n    <div mat-dialog-actions>\\r\\n        <button mat-button [type]=\\\"submit\\\" [mat-dialog-close]=\\\"1\\\" (click)=\\\"stopEdit()\\\">Save</button>\\r\\n        <button mat-button (click)=\\\"onNoClick()\\\" tabindex=\\\"-1\\\">Cancel</button>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { TokenStorage } from '../../../core/token.storage';\r\n\r\nimport * as MicrosoftGraph from '@microsoft/microsoft-graph-types';\r\nimport * as MicrosoftGraphClient from '@microsoft/microsoft-graph-client/lib/src';\r\n\r\nimport { environment } from '../../../../environments/environment';\r\nimport * as Msal from 'msal';\r\n\r\nimport { SspRoomService } from './ssp-room.service';\r\n\r\nconst graphAPIScopes = [\r\n    'User.ReadBasic.All',\r\n    'Contacts.Read',\r\n    'Contacts.ReadWrite',\r\n    'Files.ReadWrite.All',\r\n    'Calendars.ReadWrite',\r\n    'Calendars.ReadWrite.Shared',\r\n    'People.Read'\r\n];\r\n\r\nconst logger = new Msal.Logger(loggerCallback, {\r\n    level: Msal.LogLevel.Verbose,\r\n    correlationId: '12345'\r\n});\r\nfunction loggerCallback(logLevel, message, piiEnabled) {\r\n    console.log(message);\r\n}\r\n\r\nlet userAgentApplication = new Msal.UserAgentApplication(\r\n    environment.msalconfig.clientID,\r\n    null,\r\n    authCallback,\r\n    {\r\n        cacheLocation: 'localStorage',\r\n        logger: logger,\r\n        redirectUri: environment.msalconfig.redirectUri\r\n        // isAngular: true // MSAL library future support for Angular\r\n    }\r\n); // cacheLocation defaults to sessionStorage if not set in the constructor\r\n\r\nfunction authCallback(errorDesc, token, error, tokenType) {\r\n    // This function is called after loginRedirect and acquireTokenRedirect. Use tokenType to determine context.\r\n    // For loginRedirect, tokenType = 'id_token'. For acquireTokenRedirect, tokenType:'access_token'.\r\n\r\n    console.log('Global Token ' + token);\r\n    if (token) {\r\n        userAgentApplication\r\n            .acquireTokenSilent(\r\n                graphAPIScopes,\r\n                userAgentApplication.authority,\r\n                userAgentApplication.getUser()\r\n            )\r\n            .then(\r\n                function(accessToken) {\r\n                    console.log('authCallback :' + accessToken);\r\n                },\r\n                function(acquireTokenSilentError: any) {\r\n                    console.log(acquireTokenSilentError);\r\n                    userAgentApplication.acquireTokenPopup(graphAPIScopes).then(\r\n                        function(accessToken) {\r\n                            console.log('On pop Access Token' + accessToken);\r\n                        },\r\n                        function(acquireTokenPopupError) {\r\n                            console.log(acquireTokenPopupError);\r\n                        }\r\n                    );\r\n                }\r\n            );\r\n    } else if (errorDesc || error) {\r\n        console.log(error + ':' + errorDesc);\r\n    }\r\n}\r\n\r\n@Injectable()\r\nexport class O365AuthService {\r\n    public access_token = null;\r\n    public user;\r\n    public isAuthenticated = false;\r\n    public msGraphclient: any;\r\n\r\n    constructor(\r\n        private http: HttpClient,\r\n        private router: Router,\r\n        private token1: TokenStorage,\r\n        private createRoomService: SspRoomService,\r\n    ) {\r\n        userAgentApplication = new Msal.UserAgentApplication(\r\n            environment.msalconfig.clientID,\r\n            null,\r\n            (errorDesc, token, error, tokenType) => {\r\n                console.log('O365Token :' + tokenType + token);\r\n            },\r\n            {\r\n                cacheLocation: 'localStorage',\r\n                logger: logger,\r\n                redirectUri: environment.msalconfig.redirectUri,\r\n                // isAngular: true\r\n            },\r\n        ); // cacheLocation defaults to sessionStorage if not set in the constructor\r\n    }\r\n\r\n    public getUser() {\r\n        return this.authenticated.then(\r\n            isauthenticated => (isauthenticated ? userAgentApplication.getUser() : {}),\r\n        );\r\n    }\r\n\r\n    get authenticated() {\r\n        return this.token.then(t => !!t);\r\n    }\r\n\r\n    get token() {\r\n        return this.getToken();\r\n    }\r\n\r\n    public login() {\r\n        return this.loginRedirect();\r\n    }\r\n\r\n    public getToken(): Promise<string> {\r\n        return userAgentApplication\r\n            .acquireTokenSilent(\r\n                graphAPIScopes,\r\n                userAgentApplication.authority,\r\n                userAgentApplication.getUser(),\r\n            )\r\n            .then(token => {\r\n                return token;\r\n            })\r\n            .catch(error => {\r\n                return userAgentApplication\r\n                    .acquireTokenPopup(graphAPIScopes)\r\n                    .then(token => {\r\n                        return Promise.resolve(token);\r\n                    })\r\n                    .catch(innererror => {\r\n                        return Promise.resolve('');\r\n                    });\r\n            });\r\n    }\r\n\r\n    public tokenReceivedCallBack(errorDesc, token, error, tokenType) {\r\n        console.log('Callback for login');\r\n        console.log(tokenType + token);\r\n        this.syncRooms();\r\n    }\r\n\r\n    public getO365Rooms(roomNameToSearch: string, callback) {\r\n        this.getToken().then(\r\n            // Get Access Token\r\n            access_token => {\r\n                if (access_token) {\r\n                    this.msGraphclient = MicrosoftGraphClient.Client.init({\r\n                        authProvider: done => {\r\n                            done(null, access_token); // first parameter takes an error if you can't get an access token\r\n                        },\r\n                    });\r\n\r\n                    // let roomNameToSearch = '';\r\n                    if (\r\n                        roomNameToSearch != null &&\r\n                        roomNameToSearch.length > 0 &&\r\n                        roomNameToSearch.toLowerCase().trim() !== 'all'\r\n                    ) {\r\n                        roomNameToSearch =\r\n                            '&$filter = startswith(displayName, \\'' + roomNameToSearch + '\\')';\r\n                    }\r\n                    // Fetch room information\r\n                    //\r\n                    this.msGraphclient\r\n                        .api(\r\n                            'users?$select=id,displayName,userPrincipalName,userType&$top=10' +\r\n                                roomNameToSearch,\r\n                        )\r\n                        .version('v1.0')\r\n                        .get((err, res) => {\r\n                            console.log(res);\r\n                            let rooms = [];\r\n                            for (const resIter of res.value) {\r\n                                // const room: MicrosoftGraph.EmailAddress = resIter.userPrincipalName;\r\n                                rooms.push(resIter.userPrincipalName.toString());\r\n                            } // Iterate Rooms\r\n                            callback(rooms);\r\n                        });\r\n                }\r\n            },\r\n        );\r\n\r\n    }\r\n\r\n    public syncRooms() {\r\n        this.getToken().then(\r\n            // Get Access Token\r\n            access_token => {\r\n                if (access_token) {\r\n                    this.msGraphclient = MicrosoftGraphClient.Client.init({\r\n                        authProvider: done => {\r\n                            done(null, access_token); // first parameter takes an error if you can't get an access token\r\n                        },\r\n                    });\r\n\r\n                    // Fetch room information\r\n                    //\r\n                    this.msGraphclient\r\n                        .api('/me/people?$top=1000&$filter=personType/subclass eq \\'Room\\'')\r\n                        .version('v1.0')\r\n                        .get((err, res) => {\r\n                            console.log(res);\r\n                            // const rooms: [MicrosoftGraph.EmailAddress] = res.value;\r\n                            for (const resIter of res.value) {\r\n                                const room: MicrosoftGraph.EmailAddress = resIter.userPrincipalName;\r\n                                const createRoom = {\r\n                                    id: '',\r\n                                    RoomName: room.toString(),\r\n                                    DisplayModel: '',\r\n                                    PcId: '',\r\n                                    BotId: '',\r\n                                    StationId: '',\r\n                                    TenantId: this.token1.getTenantName(),\r\n                                    TenantValue: this.token1.getTenantValue(),\r\n                                };\r\n                                this.createRoomService.createSspRoom(createRoom).subscribe(data => {\r\n                                    console.log('' + JSON.stringify(data));\r\n                                });\r\n                            } // Iterate Rooms\r\n                        });\r\n                }\r\n            },\r\n        );\r\n    }\r\n\r\n    public logout() {\r\n        userAgentApplication.logout();\r\n    }\r\n    private loginRedirect() {\r\n        userAgentApplication.loginRedirect(graphAPIScopes);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n    HttpClient,\r\n    HttpHeaders,\r\n    HttpErrorResponse\r\n} from '@angular/common/http';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { TokenStorage } from '../../../core/token.storage';\r\nimport { SspRoom } from '../interfaces/ssp-room';\r\nimport { environment } from '../../../../environments/environment';\r\n\r\n@Injectable()\r\nexport class SspRoomService {\r\n    constructor(private http: HttpClient, private Token: TokenStorage) {}\r\n\r\n    dataChange: BehaviorSubject<SspRoom[]> = new BehaviorSubject<SspRoom[]>([]);\r\n\r\n    createSspRoom(createSspRoom: SspRoom): Observable<SspRoom> {\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/json',\r\n                'x-api-key': environment.sspendpoints.key\r\n            })\r\n        };\r\n        delete createSspRoom.id;\r\n        return this.http.post<SspRoom>(\r\n            environment.sspendpoints.arn,\r\n            createSspRoom,\r\n            httpOptions\r\n        );\r\n    }\r\n\r\n    getSspRoom(): Observable<SspRoom[]> {\r\n        const body = { id: 'TenantValue', value: this.Token.getTenantValue() };\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/json',\r\n                'x-api-key': environment.sspendpoints.key\r\n            })\r\n        };\r\n        return this.http.post<SspRoom[]>(\r\n            environment.sspendpoints.arn + '/' + 'query',\r\n            body,\r\n            httpOptions\r\n        );\r\n    }\r\n\r\n    deleteSspRoom(id): Observable<any> {\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/json',\r\n                'x-api-key': environment.sspendpoints.key\r\n            })\r\n        };\r\n        return this.http.delete<any>(\r\n            environment.sspendpoints.arn + '/' + id,\r\n            httpOptions\r\n        );\r\n    }\r\n\r\n    UpdateSspRoom(updateSspRoom: SspRoom): Observable<any> {\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/json',\r\n                'x-api-key': environment.sspendpoints.key\r\n            })\r\n        };\r\n        const url = environment.sspendpoints.arn + '/' + updateSspRoom.id;\r\n        delete updateSspRoom.id;\r\n        return this.http.put<any>(url, updateSspRoom, httpOptions);\r\n    }\r\n\r\n    get data(): SspRoom[] {\r\n        return this.dataChange.value;\r\n    }\r\n\r\n    getAllRooms(): void {\r\n        const body = { id: 'TenantValue', value: this.Token.getTenantValue() };\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/json',\r\n                'x-api-key': environment.sspendpoints.key\r\n            })\r\n        };\r\n        this.http\r\n            .post<SspRoom[]>(\r\n                environment.sspendpoints.arn + '/' + 'query',\r\n                body,\r\n                httpOptions\r\n            )\r\n            .subscribe(\r\n                data => {\r\n                    this.dataChange.next(data);\r\n                },\r\n                (error: HttpErrorResponse) => {\r\n                    console.log(error.name + ' ' + error.message);\r\n                }\r\n            );\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SspRoomComponent } from \"./ssp-room.component\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component: SspRoomComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SspRoomRoutingModule { }\r\n","module.exports = \"\\r\\n<div >\\r\\n\\r\\n    <mat-card>\\r\\n        <mat-card-title>Import Office 365</mat-card-title>\\r\\n        <mat-card-content>\\r\\n            <button mat-raised-button color=\\\"primary\\\" id=\\\"sspRoom-id-O365-login\\\" (click)=\\\"onO365Login()\\\">Sync O365 Rooms</button>\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n    <mat-card>\\r\\n        <mat-card-title>Room Details</mat-card-title>\\r\\n        <mat-card-content>\\r\\n            <div class=\\\"form\\\">\\r\\n                <mat-form-field floatPlaceholder=\\\"never\\\" color=\\\"accent\\\">\\r\\n                    <input matInput #filter placeholder=\\\"{{'SearchRoom' | translate }}\\\" id=\\\"ssp-Id-Search-Box\\\">\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n            <mat-table #table [dataSource]=\\\"dataSource\\\" matSort class=\\\"mat-cell\\\">\\r\\n                <ng-container matColumnDef=\\\"Room Name\\\">\\r\\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>{{'RoomName' | translate }}</mat-header-cell>\\r\\n                    <mat-cell *matCellDef=\\\"let row\\\">{{row.RoomName}}</mat-cell>\\r\\n                </ng-container>\\r\\n\\r\\n                <ng-container matColumnDef=\\\"Display Model\\\">\\r\\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>{{'DisplayModel' | translate }}</mat-header-cell>\\r\\n                    <mat-cell *matCellDef=\\\"let row\\\"> {{row.DisplayModel}}</mat-cell>\\r\\n                </ng-container>\\r\\n\\r\\n                <ng-container matColumnDef=\\\"Pc Id\\\">\\r\\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>{{'PcId' | translate }}</mat-header-cell>\\r\\n                    <mat-cell *matCellDef=\\\"let row\\\"> {{row.PcId}}</mat-cell>\\r\\n                </ng-container>\\r\\n\\r\\n                <ng-container matColumnDef=\\\"Bot Id\\\">\\r\\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>{{'BotId' | translate }}</mat-header-cell>\\r\\n                    <mat-cell *matCellDef=\\\"let row\\\"> {{row.BotId}}</mat-cell>\\r\\n                </ng-container>\\r\\n\\r\\n                <ng-container matColumnDef=\\\"Station Id\\\">\\r\\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>{{'StationId' | translate }}</mat-header-cell>\\r\\n                    <mat-cell *matCellDef=\\\"let row\\\"> {{row.StationId}}</mat-cell>\\r\\n                </ng-container>\\r\\n\\r\\n                <ng-container matColumnDef=\\\"delete\\\">\\r\\n                    <mat-header-cell *matHeaderCellDef>\\r\\n                        <button mat-icon-button color=\\\"primary\\\" id=\\\"sspRoom-Id-Add-Room\\\"(click)=\\\"addNew()\\\">\\r\\n                            <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">add</mat-icon>\\r\\n                        </button>\\r\\n                        <button mat-icon-button color=\\\"primary\\\" (click)=\\\"refresh()\\\">\\r\\n                            <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">refresh</mat-icon>\\r\\n                        </button>\\r\\n                    </mat-header-cell>\\r\\n                    <mat-cell *matCellDef=\\\"let room\\\">\\r\\n                        <button mat-icon-button (click)=\\\"deleteRoom(room.id)\\\" id=\\\"sspRoom-Id-Delete\\\">\\r\\n                            <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">delete</mat-icon>\\r\\n                        </button>\\r\\n                        <button mat-icon-button (click)=\\\"startEdit(room)\\\" id=\\\"sspRoom-Id-Edit\\\">\\r\\n                            <mat-icon aria-label=\\\"Example icon-button with a edit icon\\\">{{'edit' | translate }}</mat-icon>\\r\\n                        </button>\\r\\n                    </mat-cell>\\r\\n                </ng-container>\\r\\n\\r\\n                <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n                <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n            </mat-table>\\r\\n            <div class=\\\"no-results\\\" [style.display]=\\\"dataSource.renderedData.length == 0 ? '' : 'none'\\\">\\r\\n                No results\\r\\n            </div>\\r\\n            <mat-paginator #paginator [length]=\\\"dataSource.filteredData.length\\\" [pageIndex]=\\\"0\\\" [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\">\\r\\n            </mat-paginator>\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n</div>\\r\\n\"","module.exports = \".mat-raised-button {\\n  background-color: #1ABB9C; }\\n\\nbody {\\n  background-color: #00A000; }\\n\\n.form {\\n  min-height: 56px;\\n  max-height: 56px;\\n  display: flex;\\n  align-items: center;\\n  padding: 8px 24px 0;\\n  font-size: 20px;\\n  justify-content: space-between;\\n  border-bottom: 1px solid transparent; }\\n\\n.no-results {\\n  text-align: center;\\n  padding: 25px 0; }\\n\"","import { merge, fromEvent, Observable, BehaviorSubject } from 'rxjs';\r\n\r\nimport { debounceTime, distinctUntilChanged, map } from 'rxjs/operators';\r\n\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { MatDialogConfig, MatDialog, MatPaginator, MatSort } from '@angular/material';\r\nimport { DataSource } from '@angular/cdk/collections';\r\n\r\nimport { TokenStorage } from '../../core/token.storage';\r\nimport { Router } from '@angular/router';\r\nimport * as Msal from 'msal';\r\n\r\nimport { SspRoom } from './interfaces/ssp-room';\r\nimport { SspRoomService } from './services/ssp-room.service';\r\nimport { AddDialogComponent } from './dialogs/add/add.dialog.component';\r\nimport { EditDialogComponent } from './dialogs/edit/edit.dialog.component';\r\nimport { O365AuthService } from './services/o365Auth.service';\r\n\r\n// Discard emitted values that take less than the specified time between output\r\nconst DEBOUNCE_TIME = 150;\r\n\r\n@Component({\r\n    selector: 'app-ssp-room',\r\n    templateUrl: './ssp-room.component.html',\r\n    styleUrls: ['./ssp-room.component.scss'],\r\n})\r\nexport class SspRoomComponent implements OnInit {\r\n    displayedColumns = ['Room Name', 'Display Model', 'Pc Id', 'Bot Id', 'Station Id', 'delete'];\r\n    sspDatabase: SspRoomService | null;\r\n    dataSource: SspDataSource | null;\r\n    index: number;\r\n    id: string;\r\n    form: FormGroup;\r\n    defaultDialogConfig = new MatDialogConfig();\r\n\r\n    @ViewChild(MatPaginator)\r\n    paginator: MatPaginator;\r\n    @ViewChild(MatSort)\r\n    sort: MatSort;\r\n    @ViewChild('filter')\r\n    filter: ElementRef;\r\n\r\n    constructor(\r\n        private fb: FormBuilder,\r\n        private o365AuthService: O365AuthService,\r\n        private sspRoomService: SspRoomService,\r\n        private token: TokenStorage,\r\n        private Token: TokenStorage,\r\n        public dialog: MatDialog,\r\n        public httpClient: HttpClient,\r\n    ) {\r\n        this.defaultDialogConfig.disableClose = true;\r\n        this.defaultDialogConfig.autoFocus = true;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.form = this.fb.group({\r\n            RoomName: [''],\r\n            DisplayModel: [''],\r\n            PcId: [''],\r\n            BotId: [''],\r\n            StationId: [''],\r\n            TenantId: [this.token.getTenantName()],\r\n            TenantValue: [this.token.getTenantValue()],\r\n        });\r\n        this.refresh();\r\n    }\r\n\r\n    refresh() {\r\n        this.loadData();\r\n    }\r\n\r\n    public loadData() {\r\n        this.sspDatabase = new SspRoomService(this.httpClient, this.Token);\r\n        this.dataSource = new SspDataSource(this.sspDatabase, this.paginator, this.sort);\r\n        fromEvent(this.filter.nativeElement, 'keyup')\r\n            .pipe(\r\n                debounceTime(DEBOUNCE_TIME),\r\n                distinctUntilChanged(),\r\n            )\r\n            .subscribe(() => {\r\n                if (!this.dataSource) {\r\n                    return;\r\n                }\r\n                this.dataSource.filter = this.filter.nativeElement.value;\r\n            });\r\n    }\r\n\r\n    // If you don't need a filter or a pagination this can be simplified, you just use code from else block\r\n    private refreshTable() {\r\n        // if there's a paginator active we're using it for refresh\r\n        if (this.dataSource._paginator.hasNextPage()) {\r\n            this.dataSource._paginator.nextPage();\r\n            this.dataSource._paginator.previousPage();\r\n            // in case we're on last page this if will tick\r\n        } else if (this.dataSource._paginator.hasPreviousPage()) {\r\n            this.dataSource._paginator.previousPage();\r\n            this.dataSource._paginator.nextPage();\r\n            // in all other cases including active filter we do it like this\r\n        } else {\r\n            this.dataSource.filter = '';\r\n            this.dataSource.filter = this.filter.nativeElement.value;\r\n        }\r\n    }\r\n\r\n    addNew(sspRoom: SspRoom) {\r\n        this.o365AuthService.getUser().then((user: Msal.User) => {\r\n            if (user.idToken == null) {\r\n                this.o365AuthService.login();\r\n            } else {\r\n                this.defaultDialogConfig.data = { tenant: sspRoom };\r\n                const dialogRef = this.dialog.open(AddDialogComponent, this.defaultDialogConfig);\r\n\r\n                dialogRef.afterClosed().subscribe(result => {\r\n                    if (result === 1) {\r\n                        this.refresh();\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n    startEdit(sspRoom: SspRoom) {\r\n        console.log(JSON.stringify(sspRoom));\r\n        this.defaultDialogConfig.data = sspRoom;\r\n        const dialogRef = this.dialog.open(EditDialogComponent, this.defaultDialogConfig);\r\n        dialogRef\r\n            .afterClosed()\r\n            .pipe(debounceTime(400))\r\n            .subscribe(result => {\r\n                if (result === 1) {\r\n                }\r\n            });\r\n    }\r\n\r\n    deleteRoom(roomId) {\r\n        if (roomId !== 'undefined') {\r\n            this.sspRoomService.deleteSspRoom(roomId).subscribe(data => {\r\n                console.log('On Delete' + JSON.stringify(data));\r\n                this.refresh();\r\n            });\r\n        }\r\n    }\r\n\r\n    onO365Login() {\r\n        this.o365AuthService.getUser().then((user: Msal.User) => {\r\n            if (user.idToken == null) {\r\n                this.o365AuthService.login();\r\n            } else {\r\n                this.o365AuthService.syncRooms();\r\n            }\r\n        });\r\n\r\n        // this.o365AuthService.login();\r\n    }\r\n}\r\n\r\nexport class SspDataSource extends DataSource<SspRoom> {\r\n    _filterChange = new BehaviorSubject('');\r\n\r\n    get filter(): string {\r\n        return this._filterChange.value;\r\n    }\r\n\r\n    set filter(filter: string) {\r\n        this._filterChange.next(filter);\r\n    }\r\n\r\n    filteredData: SspRoom[] = [];\r\n    renderedData: SspRoom[] = [];\r\n\r\n    constructor(\r\n        public _sspDatabase: SspRoomService,\r\n        public _paginator: MatPaginator,\r\n        public _sort: MatSort,\r\n    ) {\r\n        super();\r\n        // Reset to the first page when the user changes the filter.\r\n        this._filterChange.subscribe(() => (this._paginator.pageIndex = 0));\r\n    }\r\n\r\n    /** Connect function called by the table to retrieve one stream containing the data to render. */\r\n    connect(): Observable<SspRoom[]> {\r\n        // Listen for any changes in the base data, sorting, filtering, or pagination\r\n        const displayDataChanges = [\r\n            this._sspDatabase.dataChange,\r\n            this._sort.sortChange,\r\n            this._filterChange,\r\n            this._paginator.page,\r\n        ];\r\n        this._sspDatabase.getAllRooms();\r\n        return merge(...displayDataChanges).pipe(\r\n            map(() => {\r\n                // Filter data\r\n                this.filteredData = this._sspDatabase.data.slice().filter((room: SspRoom) => {\r\n                    const searchStr = (\r\n                        room.id +\r\n                        room.RoomName +\r\n                        room.PcId +\r\n                        room.BotId +\r\n                        room.StationId\r\n                    ).toLowerCase();\r\n                    return searchStr.indexOf(this.filter.toLowerCase()) !== -1;\r\n                });\r\n\r\n                const sortedData = this.sortData(this.filteredData.slice());\r\n\r\n                // Grab the page's slice of the filtered sorted data.\r\n                const startIndex = this._paginator.pageIndex * this._paginator.pageSize;\r\n                this.renderedData = sortedData.splice(startIndex, this._paginator.pageSize);\r\n                return this.renderedData;\r\n            }),\r\n        );\r\n    }\r\n\r\n    disconnect() {}\r\n\r\n    /** Returns a sorted copy of the database data. */\r\n    sortData(data: SspRoom[]): SspRoom[] {\r\n        if (!this._sort.active || this._sort.direction === '') {\r\n            return data;\r\n        }\r\n        return data.sort((a, b) => {\r\n            let propertyA: number | string = '';\r\n            let propertyB: number | string = '';\r\n\r\n            switch (this._sort.active) {\r\n                case 'id':\r\n                    [propertyA, propertyB] = [a.id, b.id];\r\n                    break;\r\n                case 'RoomName':\r\n                    [propertyA, propertyB] = [a.RoomName, b.RoomName];\r\n                    break;\r\n                case 'PcId':\r\n                    [propertyA, propertyB] = [a.PcId, b.PcId];\r\n                    break;\r\n                case 'BotId':\r\n                    [propertyA, propertyB] = [a.BotId, b.BotId];\r\n                    break;\r\n                case 'StationId':\r\n                    [propertyA, propertyB] = [a.StationId, b.StationId];\r\n                    break;\r\n            }\r\n\r\n            const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\r\n            const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\r\n\r\n            return (valueA < valueB ? -1 : 1) * (this._sort.direction === 'asc' ? 1 : -1);\r\n        });\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Interceptor } from '../../app.interceptor';\r\nimport { MatDialogModule, MatSortModule, MatPaginatorModule } from '@angular/material';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { AppMaterialModule } from '../../material/material.module';\r\nimport { EditDialogComponent } from './dialogs/edit/edit.dialog.component';\r\nimport { AddDialogComponent } from './dialogs/add/add.dialog.component';\r\n\r\n\r\nimport { SspRoomRoutingModule } from './ssp-room-routing.module';\r\nimport { SspRoomComponent } from './ssp-room.component';\r\nimport { SspRoomService } from './services/ssp-room.service';\r\nimport { O365AuthService } from './services/o365Auth.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    SspRoomRoutingModule,\r\n    HttpClientModule,\r\n    AppMaterialModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatDialogModule,\r\n    MatSortModule,\r\n    MatPaginatorModule,\r\n    TranslateModule\r\n  ],\r\n  exports: [\r\n    MatSortModule,\r\n    MatPaginatorModule,\r\n    TranslateModule\r\n  ],\r\n  entryComponents: [\r\n    EditDialogComponent,\r\n    AddDialogComponent\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: Interceptor,\r\n      multi: true\r\n    },\r\n      SspRoomService, O365AuthService],\r\n    declarations: [SspRoomComponent, EditDialogComponent, AddDialogComponent]\r\n})\r\n\r\nexport class SspRoomModule { }\r\n"],"sourceRoot":""}