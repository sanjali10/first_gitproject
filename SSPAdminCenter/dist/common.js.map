{"version":3,"sources":["webpack:///./src/app/layout/room-list/services/room-list.service.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\r\nimport { TokenStorage } from '../../../core/token.storage';\r\nimport { Room } from '../interfaces/room';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { Observable, BehaviorSubject, of } from 'rxjs';\r\nimport { Device } from '../interfaces/room';\r\n@Injectable()\r\nexport class RoomListService {\r\n    constructor(private http: HttpClient, private Token: TokenStorage) {}\r\n\r\n    dataChange: BehaviorSubject<Room[]> = new BehaviorSubject<Room[]>([]);\r\n    private _currentRoom: Room;\r\n    public get currentRoom(): Room {\r\n        return this._currentRoom;\r\n    }\r\n    public set currentRoom(value: Room) {\r\n        this._currentRoom = value;\r\n    }\r\n\r\n    createRoom(createRoom: Room): Observable<Room> {\r\n        createRoom.RoomId = this.uuidv4();\r\n        createRoom.Place = '-',\r\n        createRoom.Activated =  false,\r\n        createRoom.Note = '-',\r\n\r\n        createRoom.Devices = [\r\n            {\r\n                DeviceId: this.uuidv4(),\r\n                // DeviceName: '-',\r\n                Device: 'Soc IWB',\r\n                // ConnectionType: 'LAN',\r\n                // NetworkAddress: '0.0.0.0',\r\n                // SerialNo: '-',\r\n                // PINCode: '1234',\r\n            } as Device,\r\n            {\r\n                DeviceId: this.uuidv4(),\r\n                // DeviceName: '-',\r\n                Device: 'Bot',\r\n                // ConnectionType: 'LAN',\r\n                // NetworkAddress: '0.0.0.0',\r\n                // SerialNo: '-',\r\n                // PINCode: '1234',\r\n            } as Device,\r\n            {\r\n                DeviceId: this.uuidv4(),\r\n                // DeviceName: '-',\r\n                Device: 'WePresent',\r\n                // ConnectionType: 'LAN',\r\n                // NetworkAddress: '0.0.0.0',\r\n                // SerialNo: '-',\r\n                // PINCode: '1234',\r\n            } as Device,\r\n            {\r\n                DeviceId: this.uuidv4(),\r\n                // DeviceName: '-',\r\n                Device: 'PC',\r\n                // ConnectionType: 'LAN',\r\n                // NetworkAddress: '0.0.0.0',\r\n                // SerialNo: '-',\r\n                // PINCode: '1234',\r\n            } as Device,\r\n        ];\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/json',\r\n                'x-api-key': environment.endpoints.key,\r\n            }),\r\n        };\r\n        return this.http.post<Room>(environment.endpoints.arn, createRoom, httpOptions);\r\n    }\r\n\r\n    getRoom(id: string): Observable<Room> {\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/json',\r\n                'x-api-key': environment.endpoints.key,\r\n            }),\r\n        };\r\n        return this.http.get<Room>(environment.endpoints.arn + '/' + id, httpOptions);\r\n    }\r\n\r\n    deleteRoom(id): Observable<any> {\r\n        return this.http.delete<any>(environment.endpoints.arn + '/' + id);\r\n    }\r\n\r\n    UpdateRoom(updateRoom: Room): Observable<any> {\r\n\r\n        updateRoom.TenantValue = this.Token.getTenantValue().replace('https://', '');\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/json',\r\n                'x-api-key': environment.endpoints.key,\r\n            }),\r\n        };\r\n        const url = environment.endpoints.arn + '/' + updateRoom.id;\r\n        delete updateRoom.id;\r\n        return this.http.put<any>(url, updateRoom, httpOptions);\r\n    }\r\n\r\n    get data(): Room[] {\r\n        return this.dataChange.value;\r\n    }\r\n\r\n    getAllRooms(): void {\r\n        const tenant = this.Token.getTenantValue().replace('https://', '');\r\n        const body = { TenantValue: tenant };\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/json',\r\n                'x-api-key': environment.endpoints.key,\r\n            }),\r\n        };\r\n        this.http\r\n            .post<Room[]>(environment.endpoints.arn + '/' + 'list', body, httpOptions)\r\n            .subscribe(\r\n                data => {\r\n                    this.dataChange.next(data);\r\n                },\r\n                (error: HttpErrorResponse) => {\r\n                    console.log(error.name + ' ' + error.message);\r\n                },\r\n            );\r\n    }\r\n\r\n    uuidv4(): string {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n            const r = (Math.random() * 16) | 0,\r\n                v = c == 'x' ? r : (r & 0x3) | 0x8;\r\n            return v.toString(16);\r\n        });\r\n    }\r\n}\r\n"],"sourceRoot":""}